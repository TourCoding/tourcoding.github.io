<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MathJax on 走码观</title>
    <link>/tags/mathjax/</link>
    <description>Recent content in MathJax on 走码观</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 14 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/mathjax/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CCCC</title>
      <link>/articles/cc%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/articles/cc%E8%AF%AD%E8%A8%80/</guid>
      <description>一、基本概念 1.以hello作为开始：
#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; int main(void) { printf(&amp;quot;Hello, world!\n&amp;quot;); return 0; } 以helloworld为例对写程序的思路提出如下要求：
头文件正确包含的正确性； 以函数为单位来进程程序编写； 声明部分+实现部分 return 0一定要有，本意是结束当前函数，返回给父进程看的。 多用空格和空行！ 添加注释 2.算法：解决问题的方法。（流程图，NS图，FSM有限状态机）
3.程序：用某些语言实现算法。
4.进程：
5.防止写越界、防止内存泄漏。谁打开谁关闭，谁申请谁释放。
二、数据类型、运算符和表达式 1、数据类型：（基本数据类型） 在 C 语言标准(C89)没有定义布尔类型，所以 C 语言判断真假时以 0 为假，非 0 为真。
C99 提供了 _Bool 型，所以布尔类型可以声明为 _Bool flag。
_Bool 依然仍是整数类型，但与一般整型不同的是，_Bool 变量只能赋值为 0 或 1，非 0 的值都会被存储为 1。
C99还提供了一个头文件 &amp;lt;stdbool.h&amp;gt; 定义了 bool 代表 _Bool，true 代表 1，false 代表 0。只要导入 stdbool.h ，就能非常方便的操作布尔类型了。
C语言基本数据类型
类型 符号 关键字 所占位数 存储大小 值范围 整型 有 (signed) int 32 2 或 4 字节 -32,768 到 32,767 或 -2,147,483,648 到 2,147,483,647 有 (signed) short 16 2 字节 -32,768 到 32,767 有 (signed) long 32 4 字节 -2,147,483,648 到 2,147,483,647 无 unsigned int 32 2 或 4 字节 0 到 65,535 或 0 到 4,294,967,295 无 unsigned short 16 2 字节 0 到 65,535 无 unsigned long 32 4 字节 0 到 4,294,967,295 实型 有 float 32 3.</description>
    </item>
    
    <item>
      <title>C语言笔记</title>
      <link>/post/2023/02/14/c%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/2023/02/14/c%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</guid>
      <description>一、基本概念 1.以hello作为开始：
#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; int main(void) { printf(&amp;quot;Hello, world!\n&amp;quot;); return 0; } 以helloworld为例对写程序的思路提出如下要求：
头文件正确包含的正确性； 以函数为单位来进程程序编写； 声明部分+实现部分 return 0一定要有，本意是结束当前函数，返回给父进程看的。 多用空格和空行！ 添加注释 2.算法：解决问题的方法。（流程图，NS图，FSM有限状态机）
3.程序：用某些语言实现算法。
4.进程：
5.防止写越界、防止内存泄漏。谁打开谁关闭，谁申请谁释放。
二、数据类型、运算符和表达式 1、数据类型：（基本数据类型） 在 C 语言标准(C89)没有定义布尔类型，所以 C 语言判断真假时以 0 为假，非 0 为真。
C99 提供了 _Bool 型，所以布尔类型可以声明为 _Bool flag。
_Bool 依然仍是整数类型，但与一般整型不同的是，_Bool 变量只能赋值为 0 或 1，非 0 的值都会被存储为 1。
C99还提供了一个头文件 &amp;lt;stdbool.h&amp;gt; 定义了 bool 代表 _Bool，true 代表 1，false 代表 0。只要导入 stdbool.h ，就能非常方便的操作布尔类型了。
C语言基本数据类型
类型 符号 关键字 所占位数 存储大小 值范围 整型 有 (signed) int 32 2 或 4 字节 -32,768 到 32,767 或 -2,147,483,648 到 2,147,483,647 有 (signed) short 16 2 字节 -32,768 到 32,767 有 (signed) long 32 4 字节 -2,147,483,648 到 2,147,483,647 无 unsigned int 32 2 或 4 字节 0 到 65,535 或 0 到 4,294,967,295 无 unsigned short 16 2 字节 0 到 65,535 无 unsigned long 32 4 字节 0 到 4,294,967,295 实型 有 float 32 3.</description>
    </item>
    
    <item>
      <title>A Plain Markdown Post</title>
      <link>/post/2016/02/14/a-plain-markdown-post/</link>
      <pubDate>Sun, 14 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/2016/02/14/a-plain-markdown-post/</guid>
      <description>This sample post is mainly for blogdown users. If you do not use blogdown, you can skip the first section.
1. Markdown or R Markdown This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:
You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.</description>
    </item>
    
  </channel>
</rss>
